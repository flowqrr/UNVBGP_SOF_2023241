@using Microsoft.AspNetCore.Identity
@inject SignInManager<SiteUser> SignInManager
@inject UserManager<SiteUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link text-light" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
                @{
                    var user = await UserManager.GetUserAsync(User);
                }
                @if (user != null && user.ProfilePicData != null && user.ProfilePicData.Length > 0)
                {
                    <img src="@Url.Action("GetProfilePic", "Home", new { userid = user.Id })" alt="Profile Picture" style="width: 30px; height: 30px; border-radius: 50%;" />
                }
                Hello @User.Identity?.Name!
            </a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="btn btn-link text-light">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-light" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-light" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
