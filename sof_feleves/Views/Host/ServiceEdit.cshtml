@model Service
<head>
    <link rel="stylesheet" href="/css/site.css" />
</head>
<div class="container mt-5">
    <h2 class="mb-4">
        <span id="serviceName">@Model.Name</span>
        <button class="btn btn-link lnk-one edit-btn"
                data-toggle="modal"
                data-target="#editNameModal"
                data-service-id="@Model.ID">
            Edit
        </button>
    </h2>

    <div class="card mb-3 custom-card">
        <div class="card-body ">
            <h3 class="card-title">
                Description
                <button class="btn btn-link lnk-one edit-btn"
                        data-toggle="modal"
                        data-target="#editDescriptionModal"
                        data-service-id="@Model.ID">
                    Edit
                </button>
            </h3>
            <p class="card-text"><span id="serviceDescription">@Model.Description</span></p>
        </div>
    </div>

    <div class="card mb-3 custom-card">
        <div class="card-body">
            <h3 class="card-title">
                Location
                <button class="btn btn-link lnk-one edit-btn"
                        data-toggle="modal"
                        data-target="#editLocationModal"
                        data-service-id="@Model.ID">
                    Edit
                </button>
            </h3>
            <p class="card-text"><span id="serviceLocation">@Model.Location</span></p>
        </div>
    </div>

    <div class="card mb-3 custom-card">
        <div class="card-body">
            <h3 class="card-title">Appointments</h3>
            @if (Model.Appointments != null)
            {
                <ul class="list-group">
                    @foreach (var appointment in Model.Appointments)
                    {
                        <li class="list-group-item custom-card-dark text-light">
                            <strong>@appointment.Date:</strong> @appointment.MaxApplicants
                            <a href="/Host/ManageApplicants?id=@appointment.ID" class="btn btn-two">View / manage applicants</a>
                            <a href="/Host/EditAppointment?id=@appointment.ID" class="btn btn-one">Edit</a>
                            <a href="/Host/DeleteAppointment?id=@appointment.ID" class="btn btn-three">Delete</a>
                        </li>
                    }
                </ul>
            }
            else
            {
                <p class="text-muted">No appointments available.</p>
            }
            <form asp-action="AddAppointment" asp-controller="Host" method="get">
                <input type="hidden" name="serviceId" value="@Model.ID" />
                <button type="submit" class="btn btn-two">Add an appointment</button>
            </form>
        </div>
    </div>

    <div class="card mb-3 custom-card">
        <div class="card-body">
            <h3 class="card-title">Posts</h3>
            @if (Model.Posts != null)
            {
                <ul class="list-group">
                    @foreach (var post in Model.Posts)
                    {
                        <li class="list-group-item custom-card-dark text-light">
                            @if (post.ImageData != null)
                            {
                                <img src="@Url.Action("GetPostImage", "Home", new { postid = post.ID })" alt="Attached Image" class="img-thumbnail" />
                            }
                            <h5 class="card-title">@post.Title</h5>
                            <p class="card-text">@post.Text</p>
                        </li>
                    }
                </ul>
            }
            else
            {
                <p class="text-muted">No posts yet.</p>
            }
            <form asp-action="AddPost" asp-controller="Host" method="get">
                <input type="hidden" name="serviceId" value="@Model.ID" />
                <button type="submit" class="btn btn-two">Add a post</button>
            </form>
        </div>
    </div>

<!-- model for editing Name -->
<div class="modal fade text-dark" id="editNameModal" tabindex="-1" role="dialog" aria-labelledby="editNameModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editNameModalLabel">Edit Name</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="editNameForm">
                    <div class="form-group">
                        <label for="newName">New Name:</label>
                        <input type="text" class="form-control" id="newName" />
                    </div>
                    <button type="submit" class="btn btn-two">Save</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- model for editing Description -->
        <div class="modal fade text-dark" id="editDescriptionModal" tabindex="-1" role="dialog" aria-labelledby="editDescriptionModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editDescriptionModalLabel">Edit Description</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="editDescriptionForm">
                    <div class="form-group">
                        <label for="newDescription">New Description:</label>
                        <textarea class="form-control" id="newDescription"></textarea>
                    </div>
                    <button type="submit" class="btn btn-two">Save</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- model for editing Location -->
<div class="modal fade text-dark" id="editLocationModal" tabindex="-1" role="dialog" aria-labelledby="editLocationModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editLocationModalLabel">Edit Location</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="editLocationForm">
                    <div class="form-group">
                        <label for="newLocation">New Location:</label>
                        <textarea class="form-control" id="newLocation"></textarea>
                    </div>
                    <button type="submit" class="btn btn-two">Save</button>
                </form>
            </div>
        </div>
    </div>
</div>
</div>

@section scripts {
    <script>
        $('.edit-btn').click(function () {
            var serviceId = $(this).data('service-id');
            $('#editNameModal, #editDescriptionModal, #editLocationModal').data('service-id', serviceId);
        });

        // handling for submission for Name editing
        $('#editNameForm').submit(function (e) {
            e.preventDefault();
            var newName = $('#newName').val();
            var serviceId = $('#editNameModal').data('service-id');

            // making an AJAX request to update the name in the database
            $.ajax({
                url: '/Host/UpdateServiceName',
                type: 'POST',
                data: { id: serviceId, newName: newName },
                success: function () {
                    // updating the displayed name on success
                    $('#serviceName').text(newName);
                    $('#editNameModal').modal('hide');
                },
                error: function (error) {
                    console.error('Error updating name:', error);
                }
            });
        });

        // handling form submission for Description editing
        $('#editDescriptionForm').submit(function (e) {
            e.preventDefault();
            var newDescription = $('#newDescription').val();
            var serviceId = $('#editDescriptionModal').data('service-id');

            // making an AJAX request to update the description in the database
            $.ajax({
                url: '/Host/UpdateServiceDescription',
                type: 'POST',
                data: { id: serviceId, newDescription: newDescription },
                success: function () {
                    // updating the displayed description on success
                    $('#serviceDescription').text(newDescription);
                    $('#editDescriptionModal').modal('hide');
                },
                error: function (error) {
                    console.error('Error updating description:', error);
                }
            });
        });

        // handling form submission for Location editing
        $('#editLocationForm').submit(function (e) {
            e.preventDefault();
            var newLocation = $('#newLocation').val();
            var serviceId = $('#editLocationModal').data('service-id');

            // making an AJAX request to update the description in the database
            $.ajax({
                url: '/Host/UpdateServiceLocation',
                type: 'POST',
                data: { id: serviceId, newLocation: newLocation },
                success: function () {
                    // updating the displayed description on success
                    $('#serviceLocation').text(newLocation);
                    $('#editLocationModal').modal('hide');
                },
                error: function (error) {
                    console.error('Error updating location:', error);
                }
            });
        });
    </script>
}
